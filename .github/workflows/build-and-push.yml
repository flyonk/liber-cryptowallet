name: deploy-dev
on:
  push:
    branches:
      - 'dev'
      - 'master'
jobs:
  build-push-and-deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@master
      - name: helm lint
        run: helm lint provisioning/liber-app
      - name: Set outputs
        id: version
        run: |
          if [[ ${{ github.ref_type }} == 'tag' ]]; then
            TAG=${{ github.ref_name }}
          else
            TAG="commit-$(git rev-parse --short HEAD)"
          fi
          echo "::set-output name=tag::${TAG}"
      - name: resolve k8s kubeconfig
        id: k8s
        run: |
          cluster='dev'
          cluster_front_ip='172.31.27.226'
          if [[ 'master' == ${{ github.ref_name }} ]]; then
            cluster='prod'
            cluster_front_ip='172.31.18.220'
          fi;
          
          echo "::set-output name=cluster::${cluster}"
          echo "::set-output name=cluster_front_ip::${cluster_front_ip}"
          echo "::set-output name=kubeconfig::/root/.kube/config-${cluster}"
      - name: Kaniko build
        uses: aevea/action-kaniko@v0.6.2
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          image: ${{ github.repository_owner }}/liber-app
          tag: ${{ steps.version.outputs.tag }}
          registry: ghcr.io
          password: ${{ secrets.GITHUB_TOKEN }}
          extra_args: |
            --build-arg VERSION=${{ steps.version.outputs.tag }} 
            --build-arg GITHUB_TOKEN=${{ secrets.ACCESS_TOKEN }}
            --build-arg NPM_TOKEN=${{ secrets.NPM_TOKEN }}
            --build-arg BRAND_CONFIGURATION_HOSTNAME=conf.middleware.${{ steps.k8s.outputs.cluster }}.k8s.domain
            --build-arg BRAND_CONFIGURATION_IP=${{ steps.k8s.outputs.cluster_front_ip }}
      - name: deploy
        run: |
          helm --kubeconfig=${{ steps.k8s.outputs.kubeconfig }} upgrade --install liber-app ./provisioning/liber-app \
          --debug --namespace=frontend \
          --values=./provisioning/liber-app/values.yaml \
          --values=./provisioning/liber-app/values.${{ steps.k8s.outputs.cluster }}.yaml \
          --set image.tag=${{ steps.version.outputs.tag }}
      - name: Run autotests from liber-app-autotests
        run: |
          curl -X POST -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/cryptowize-tech/liber-app-autotests/actions/workflows/autotest.yml/dispatches -d '{"ref":"main","inputs":{"baseApiUrl":"https://api.dev.liber.casa/"}}' -v


